@using DevExtreme.AspNet.Mvc
@using DevExtreme.AspNet.Mvc.Builders
@using Application.Requests.Queries.Get_Lincense

@model Lincense_Get.LicenseViewModel

@{
    string formattedDateTime;
    string DeviceName;
    string LicenseStatus;
    var Name_Group = ViewBag.Name_Group;
    Enums.EnLicenseStatus? Enum_LicenseStatus;
    bool isDisabled = false;
    if (Model.License != null)
    {
        formattedDateTime = Model.License.LicenseActivated?.ToString("dd.MM.yyyy HH:mm");
        DeviceName = Model.License.DeviceName;
        LicenseStatus =(int)Model.License.LicenseStatus == 0 ? Localization.NotActivated : (int)Model.License.LicenseStatus == 1 ? Localization.Activated : (int)Model.License.LicenseStatus == 2 ? Localization.Deactivated : "";
        Enum_LicenseStatus = Model.License.LicenseStatus;
    }
    else
    {
        formattedDateTime = "";
        DeviceName = "";
        LicenseStatus = "";
        Enum_LicenseStatus = null;
        isDisabled = true;
    }
}
<script asp-append-version="true">
    (function () {
        var errorCode = "@Model.ErrorCode";
        var errorMessage = "@Model.ErrorMessage";
        var nameGroup = "@(ViewBag.Name_Group ?? "null")";
        if (errorCode !== "NoError") {
             if (errorCode === "Access_denied" || errorCode === "Invalid_token") {
                window.location.href = '/Account/Logout/';
            }
            ShowToast('warning', errorMessage);
        }
        if (nameGroup === "null") {
            ShowToast('warning', errorMessage);
        }
    })();
</script>

<script src="~/js/Pages/Lincense_Group_Oprostnik/Lincense/AddLincense.js" asp-append-version="true"></script>

<div class="container">
    <form name="UpsertLicense" asp-controller="Lincense" asp-action="UpsertLicense" mehod="PUT" autocomplete="off">
        <div class="row">
            @(Html.DevExtreme()
                .TextBoxFor(m => m.License.Oid)
                .Visible(false)
                .ID("Oid").Name("Oid"))
            <div class="col-md-12">
                @(Html.DevExtreme()
                    .TextBoxFor(m => m.License.DeviceName)
                    .ID("DeviceName")
                    .LabelMode(EditorLabelMode.Floating)
                    .Label(Localization.Device_Name)
                    .Visible(true).ReadOnly(true))
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                @(Html.DevExtreme()
                    .TextBoxFor(m => m.License.ActivationCode)
                    .ID("ActivationCode")
                    .LabelMode(EditorLabelMode.Floating)
                    .Label(Localization.ActivationCode)
                    .Visible(true).ReadOnly(true))
            </div>
            <div class="col-md-6">
                @{
                    if (Model.License==null || Model.License.LicenseActivated == DateTime.MinValue)
                    {
                        @(Html.DevExtreme()
                        .TextBox()
                        .ID("LincenseActivated")
                        .LabelMode(EditorLabelMode.Floating)
                        .Label(Localization.LincenseActivated)
                        .Visible(true)
                        .ReadOnly(true).Value(""))
                    }
                    else
                    {
                        @(Html.DevExtreme()
                        .TextBox()
                        .ID("LincenseActivated")
                        .LabelMode(EditorLabelMode.Floating)
                        .Label(Localization.LincenseActivated)
                        .Visible(true)
                        .ReadOnly(true).Value(@formattedDateTime))
                    }
                }
            </div>
            <div class="col-md-6">
                @(
                    Html.DevExtreme()
                    .TextBoxFor(m => m.License.LicenseStatus)
                    .ID("LicenseStatus")
                    .LabelMode(EditorLabelMode.Floating)
                    .Label(Localization.Status)
                    .Visible(true)
                    .ReadOnly(true)
                    .Value(LicenseStatus))
            </div>
            <div class="col-md-6">
                @(Html.DevExtreme().SelectBox()
                    .Label(Localization.Name_Group)
                    .DataSource(new JS("ISNPS.load_dataSource('/GroupQuestionnarei_API/Group_List', 'GroupQ', 'SelectBox')"))
                    //.DataSource(d => d.Mvc().Controller("GroupQuestionnarei_API").LoadAction("Group_List").Key("Id"))
                    .AcceptCustomValue(true)
                    .InputAttr("aria-label", "GroupQ")
                    .Name("GroupQ")
                    .ID("GroupQ")
                    .ValueExpr("Id")
                    .DisplayExpr("Name")
                    .OnValueChanged("OnValueChanged")
                    .OnInput("OnInput")
                    .OnContentReady("function(e){ created_SelectBox(e, \""+ Name_Group +"\""+")}")
                    .Value(Name_Group)
                    )
            </div>
        </div>
        <div class="modal-footer">
            @(Html.DevExtreme().Button().Icon("revert").Type(ButtonType.Normal).Text(Localization.Cancel).OnClick("closeModalClick"))
            @(Html.DevExtreme().Button().Disabled(isDisabled).Icon("save").Type(ButtonType.Success).Text(Localization.Save).OnClick("function(e){ onSubmitUpsertLicenseClick(e,\""+ Enum_LicenseStatus +"\")}").ID("submit_button"))
        </div>
    </form>
</div>